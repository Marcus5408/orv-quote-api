name: 'API Deployment'

concurrency: production

on:
  release:
    types:
      - published

jobs:
  Deploy:
    runs-on: ubuntu-latest
    environment: production
    
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    # actions/checkout MUST come before auth
    - name: 'Checkout code'
      uses: 'actions/checkout@v3'

    - name: 'Authenticate with Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SA }}

    - name: 'Set up gcloud Cloud SDK environment'
      # You may pin to the exact commit or the version.
      # uses: google-github-actions/setup-gcloud@e30db14379863a8c79331b04a9969f4c1e225e0b
      uses: google-github-actions/setup-gcloud@v1.1.1
      with:
        # Skip installation of the gcloud SDK and use the system-supplied version instead. The "version" input will be ignored.
        skip_install: false # optional
        # Version or version constraint of the gcloud SDK to install. If unspecified, it will accept any installed version of the gcloud SDK. If set to "latest", it will download the latest available SDK. If set to a version constraint, it will download the latest available version that matches the constraint. Examples: "290.0.1" or ">= 197.0.1".
        version: latest # optional, default is latest
        # ID of the Google Cloud project. If provided, this will configure gcloud to use this project ID by default for commands. Individual commands can still override the project using the --project flag which takes precedence.
        project_id: orv-quote-api # optional
        # List of Cloud SDK components to install
        install_components: app-engine-python # optional
    
    - name: 'Set up gcloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: 'Test gcloud CLI'
      run: |
        gcloud info

    - name: 'Configure gcloud CLI'
      run: |
        gcloud config set project orv-quote-api
        gcloud config set app/promote_by_default false

    - name: 'Deploy to App Engine'
      run: |
        gcloud app deploy app.yaml --quiet

  # This job is used to test the output of the previous job.
  # It tests the endpoints of the deployed app.
  Test-Deployment:
    runs-on: ubuntu-latest
    environment: production
    needs: Deploy
    steps:
      - name: 'Install jq dependency'
        run: |
          sudo apt-get install jq

      - name: 'Test `/` endpoint'
        run: |
          response=$(curl -s https://orv-quote-api.uk.r.appspot.com/)
          
      - name: 'Test `/quote` endpoint'
        run: |
          response=$(curl -s https://orv-quote-api.uk.r.appspot.com/quote)
          echo $response | jq -e '.quote and .author and .chapter and .episode and .episode_name' > /dev/null
          
      - name: 'Test `/shortquote` endpoint'
        run: |
          response=$(curl -s https://orv-quote-api.uk.r.appspot.com/shortquote)
          echo $response | jq -e '.quote and .author and .chapter and .episode and .episode_name' > /dev/null

      - name: 'Test `/longquote` endpoint'
        run: |
          response=$(curl -s https://orv-quote-api.uk.r.appspot.com/longquote)
          echo $response | jq -e '.quote and .author and .chapter and .episode and .episode_name' > /dev/null